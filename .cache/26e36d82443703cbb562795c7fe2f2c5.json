{"dependencies":[{"name":"/Users/domginger/Development/fontviewer/package.json","includedInParent":true,"mtime":1529522905668},{"name":"/Users/domginger/Development/fontviewer/node_modules/opentype.js/package.json","includedInParent":true,"mtime":1529522856919}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n// Run-time checking of preconditions.\n\nfunction fail(message) {\n    throw new Error(message);\n}\n\n// Precondition function that checks if the given predicate is true.\n// If not, it will throw an error.\nfunction argument(predicate, message) {\n    if (!predicate) {\n        fail(message);\n    }\n}\n\nexports.fail = fail;\nexports.argument = argument;\nexports.assert = argument;\nexports.default = { fail, argument, assert: argument };","map":{"mappings":[{"generated":{"line":6,"column":0},"source":"node_modules/opentype.js/src/check.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/opentype.js/src/check.js","original":{"line":3,"column":0}},{"name":"fail","generated":{"line":8,"column":9},"source":"node_modules/opentype.js/src/check.js","original":{"line":3,"column":9}},{"generated":{"line":8,"column":13},"source":"node_modules/opentype.js/src/check.js","original":{"line":3,"column":0}},{"name":"message","generated":{"line":8,"column":14},"source":"node_modules/opentype.js/src/check.js","original":{"line":3,"column":14}},{"generated":{"line":8,"column":21},"source":"node_modules/opentype.js/src/check.js","original":{"line":3,"column":0}},{"generated":{"line":8,"column":23},"source":"node_modules/opentype.js/src/check.js","original":{"line":3,"column":23}},{"generated":{"line":9,"column":0},"source":"node_modules/opentype.js/src/check.js","original":{"line":4,"column":4}},{"generated":{"line":9,"column":10},"source":"node_modules/opentype.js/src/check.js","original":{"line":4,"column":10}},{"name":"Error","generated":{"line":9,"column":14},"source":"node_modules/opentype.js/src/check.js","original":{"line":4,"column":14}},{"generated":{"line":9,"column":19},"source":"node_modules/opentype.js/src/check.js","original":{"line":4,"column":10}},{"name":"message","generated":{"line":9,"column":20},"source":"node_modules/opentype.js/src/check.js","original":{"line":4,"column":20}},{"generated":{"line":9,"column":27},"source":"node_modules/opentype.js/src/check.js","original":{"line":4,"column":10}},{"generated":{"line":9,"column":28},"source":"node_modules/opentype.js/src/check.js","original":{"line":4,"column":4}},{"generated":{"line":10,"column":0},"source":"node_modules/opentype.js/src/check.js","original":{"line":5,"column":1}},{"generated":{"line":12,"column":0},"source":"node_modules/opentype.js/src/check.js","original":{"line":7,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/opentype.js/src/check.js","original":{"line":8,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/opentype.js/src/check.js","original":{"line":9,"column":0}},{"name":"argument","generated":{"line":14,"column":9},"source":"node_modules/opentype.js/src/check.js","original":{"line":9,"column":9}},{"generated":{"line":14,"column":17},"source":"node_modules/opentype.js/src/check.js","original":{"line":9,"column":0}},{"name":"predicate","generated":{"line":14,"column":18},"source":"node_modules/opentype.js/src/check.js","original":{"line":9,"column":18}},{"generated":{"line":14,"column":27},"source":"node_modules/opentype.js/src/check.js","original":{"line":9,"column":0}},{"name":"message","generated":{"line":14,"column":29},"source":"node_modules/opentype.js/src/check.js","original":{"line":9,"column":29}},{"generated":{"line":14,"column":36},"source":"node_modules/opentype.js/src/check.js","original":{"line":9,"column":0}},{"generated":{"line":14,"column":38},"source":"node_modules/opentype.js/src/check.js","original":{"line":9,"column":38}},{"generated":{"line":15,"column":0},"source":"node_modules/opentype.js/src/check.js","original":{"line":10,"column":4}},{"generated":{"line":15,"column":8},"source":"node_modules/opentype.js/src/check.js","original":{"line":10,"column":8}},{"name":"predicate","generated":{"line":15,"column":9},"source":"node_modules/opentype.js/src/check.js","original":{"line":10,"column":9}},{"generated":{"line":15,"column":18},"source":"node_modules/opentype.js/src/check.js","original":{"line":10,"column":4}},{"generated":{"line":15,"column":20},"source":"node_modules/opentype.js/src/check.js","original":{"line":10,"column":20}},{"name":"fail","generated":{"line":16,"column":0},"source":"node_modules/opentype.js/src/check.js","original":{"line":11,"column":8}},{"name":"message","generated":{"line":16,"column":13},"source":"node_modules/opentype.js/src/check.js","original":{"line":11,"column":13}},{"generated":{"line":16,"column":20},"source":"node_modules/opentype.js/src/check.js","original":{"line":11,"column":8}},{"generated":{"line":17,"column":0},"source":"node_modules/opentype.js/src/check.js","original":{"line":12,"column":5}},{"generated":{"line":18,"column":0},"source":"node_modules/opentype.js/src/check.js","original":{"line":13,"column":1}},{"name":"fail","generated":{"line":20,"column":8},"source":"node_modules/opentype.js/src/check.js","original":{"line":15,"column":9}},{"name":"fail","generated":{"line":20,"column":15},"source":"node_modules/opentype.js/src/check.js","original":{"line":15,"column":9}},{"name":"argument","generated":{"line":21,"column":8},"source":"node_modules/opentype.js/src/check.js","original":{"line":15,"column":15}},{"name":"argument","generated":{"line":21,"column":19},"source":"node_modules/opentype.js/src/check.js","original":{"line":15,"column":15}},{"name":"assert","generated":{"line":22,"column":8},"source":"node_modules/opentype.js/src/check.js","original":{"line":15,"column":37}},{"name":"argument","generated":{"line":22,"column":17},"source":"node_modules/opentype.js/src/check.js","original":{"line":15,"column":25}},{"generated":{"line":23,"column":18},"source":"node_modules/opentype.js/src/check.js","original":{"line":16,"column":15}},{"name":"fail","generated":{"line":23,"column":20},"source":"node_modules/opentype.js/src/check.js","original":{"line":16,"column":17}},{"generated":{"line":23,"column":24},"source":"node_modules/opentype.js/src/check.js","original":{"line":16,"column":15}},{"name":"argument","generated":{"line":23,"column":26},"source":"node_modules/opentype.js/src/check.js","original":{"line":16,"column":23}},{"generated":{"line":23,"column":34},"source":"node_modules/opentype.js/src/check.js","original":{"line":16,"column":15}},{"name":"assert","generated":{"line":23,"column":36},"source":"node_modules/opentype.js/src/check.js","original":{"line":16,"column":33}},{"name":"argument","generated":{"line":23,"column":44},"source":"node_modules/opentype.js/src/check.js","original":{"line":16,"column":41}},{"generated":{"line":23,"column":52},"source":"node_modules/opentype.js/src/check.js","original":{"line":16,"column":15}}],"sources":{"node_modules/opentype.js/src/check.js":"// Run-time checking of preconditions.\n\nfunction fail(message) {\n    throw new Error(message);\n}\n\n// Precondition function that checks if the given predicate is true.\n// If not, it will throw an error.\nfunction argument(predicate, message) {\n    if (!predicate) {\n        fail(message);\n    }\n}\n\nexport { fail, argument, argument as assert };\nexport default { fail, argument, assert: argument };\n"},"lineCount":null}},"hash":"5e51865c3b3c5f9da0ada78cbaaa4360","cacheData":{"env":{}}}